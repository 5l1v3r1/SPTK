def options(opt):
    pass

def configure(conf):
    pass

def build(bld):    
    bld.install_files('${HPREFIX}', '../include/SPTK.h')

    src = [        
        'clip/_clip.cpp',
        'lpc2lsp/_lpc2lsp.cpp',
        'b2mc/_b2mc.cpp',
        'transpose/_transpose.cpp',
        'fft/_fft.cpp',
        'mgc2sp/_mgc2sp.cpp',
        'lspcheck/_lspcheck.cpp',
        'window/_window.cpp',
        'uels/_uels.cpp',
        'par2lpc/_par2lpc.cpp',
        'vq/_vq.cpp',
        'dfs/_dfs.cpp',
        'lpc/_lpc.cpp',
        'c2acr/_c2acr.cpp',
        'rmse/_rmse.cpp',
        'acep/_acep.cpp',
        'average/_average.cpp',
        'nrand/_nrand.cpp',
        'lsp2lpc/_lsp2lpc.cpp',
        'dct/_dct.cpp',
        'ifft2/_ifft2.cpp',
        'mglsadf/_mglsadf.cpp',
        'norm0/_norm0.cpp',
        'ivq/_ivq.cpp',
        'mlpg/_mlpg.cpp',
        'ifft/_ifft.cpp',
        'fftcep/_fftcep.cpp',
        'ulaw/_ulaw.cpp',
        'lmadf/_lmadf.cpp',
        'mgc2mgc/_mgc2mgc.cpp',
        'root_pol/_root_pol.cpp',
        'lpc2par/_lpc2par.cpp',
        'gnorm/_gnorm.cpp',
        'ignorm/_ignorm.cpp',
        'lspdf/_lspdf.cpp',
        'levdur/_levdur.cpp',
        'grpdelay/_grpdelay.cpp',
        'mc2b/_mc2b.cpp',
        'ifftr/_ifftr.cpp',
        'c2sp/_c2sp.cpp',
        'fft2/_fft2.cpp',
        'fftr2/_fftr2.cpp',
        'mfcc/_mfcc.cpp',
        'df2/_df2.cpp',
        'fftr/_fftr.cpp',
        'ltcdf/_ltcdf.cpp',
        'phase/_phase.cpp',
        'agcep/_agcep.cpp',
        'freqt/_freqt.cpp',
        'histogram/_histogram.cpp',
        'gmm/_gmm.cpp',
        'gc2gc/_gc2gc.cpp',
        'mcep/_mcep.cpp',
        'glsadf/_glsadf.cpp',
        'gcep/_gcep.cpp',
        'imsvq/_imsvq.cpp',
        'lpc2c/_lpc2c.cpp',
        'zcross/_zcross.cpp',
        'mlsadf/_mlsadf.cpp',
        'c2ir/_c2ir.cpp',
        'msvq/_msvq.cpp',
        'amcep/_amcep.cpp',
        'smcep/_smcep.cpp',
        'acorr/_acorr.cpp',
        'reverse/_reverse.cpp',
        'zerodf/_zerodf.cpp',
        'lbg/_lbg.cpp',
        'mgcep/_mgcep.cpp',
        'poledf/_poledf.cpp',
    ]

    bld.shlib(
        source = src,
        target = 'SPTK',
        vnum = bld.env['VERSION'],
        use = 'SPTKlib',
#        defines = bld.env.defines, # TODO how to get conf.env.DEFINES..?
        defines = ['HAVE_STRING_H'],
        includes = ['../include'])
